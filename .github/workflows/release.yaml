name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    env:
      RELEASE_VERSION: null
      MANIFEST_VERSION: null

    steps:
      - uses: actions/checkout@v4

      - name: Check current release version
        run: |
          VERSION=$(git fetch --tags && git tag | xargs -n1 test -z && echo '0.0.0' || git rev-list --tags --topo-order --max-count=1 | xargs git describe --tags)
          echo "RELEASE_VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Check package.json version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "MANIFEST_VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Push next release tag
        if: ${{ success() && env.RELEASE_VERSION != env.MANIFEST_VERSION }}
        run: |
          gh api \
            repos/${{ github.repository}}/git/refs \
            --method POST \
            --field ref="refs/tags/${{ env.MANIFEST_VERSION}}" \
            --field sha="${{ github.sha }}"

      - uses: pnpm/action-setup@v4
        if: ${{ success() && env.RELEASE_VERSION != env.MANIFEST_VERSION }}

      - uses: actions/setup-node@v4
        if: ${{ success() && env.RELEASE_VERSION != env.MANIFEST_VERSION }}
        with:
          node-version-file: .node-version
          cache: pnpm

      - name: Install dependencies
        if: ${{ success() && env.RELEASE_VERSION != env.MANIFEST_VERSION }}
        run: pnpm install

      - name: Build and zip the extension
        if: ${{ success() && env.RELEASE_VERSION != env.MANIFEST_VERSION }}
        run: pnpm run zip

      - name: Create release
        if: ${{ success() && env.RELEASE_VERSION != env.MANIFEST_VERSION }}
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.MANIFEST_VERSION }}
          release_name: Release ${{ env.MANIFEST_VERSION }}

      - name: Upload release asset
        if: ${{ success() && env.RELEASE_VERSION != env.MANIFEST_VERSION }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/tweet-this-page-${{ env.MANIFEST_VERSION }}-chrome.zip
          asset_name: tweet-this-page-${{ env.MANIFEST_VERSION }}-chrome.zip
          asset_content_type: application/zip
